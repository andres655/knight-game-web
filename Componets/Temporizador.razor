

<span class="clock-time-next-monospace"> <Icon Name="IconName.Clock" /> @temporizador.minutos.ToString("D2"): @temporizador.segundos.ToString("D2")</span>

@code {
    public Models.Temporizador temporizador = new Models.Temporizador();

    protected override async Task OnInitializedAsync()
    {
        temporizador.horas = 0;
        temporizador.minutos = 0;
        temporizador.segundos = 0;
        temporizador.contadorActivo = true;

        while (temporizador.contadorActivo)
        {
            await Task.Delay(1000); // Espera un segundo

            temporizador.segundos++; // Incrementa los segundos

            if (temporizador.segundos == 60)
            {
                temporizador.minutos++; // Incrementa los minutos cuando los segundos llegan a 60
                temporizador.segundos = 0; // Reinicia los segundos
            }

            if (temporizador.minutos == 60)
            {
                temporizador.horas++; // Incrementa las horas cuando los minutos llegan a 60
                temporizador.minutos = 0; // Reinicia los minutos
            }
            StateHasChanged();
            
        }
    }

    // Opcional: Detener el contador
    public void DetenerContador()
    {
        temporizador.contadorActivo = false;
    }

    public void ResetContador()
    {
        temporizador.horas = 0;
        temporizador.minutos = 0;
        temporizador.segundos = 0;
    }

}
